/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend;

import backend.BazaMaster;
import backend.Czas;
import backend.Pojazd;
import backend.Tabela;
import backend.Zawodnik;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Timax
 */
public class masterPanel extends javax.swing.JFrame {

    String numerRejestracyjnyPojazdu;
    Boolean modyfikacjaDanych =false;
    Boolean modyfikacjaCzasu =false;
    BazaMaster bMaster;
    
    public masterPanel(String login, String haslo) {
        initComponents();
        this.setAllEnabled(false);
        bMaster = new BazaMaster(login, haslo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        maxPojemnosc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        doladowanie = new javax.swing.JComboBox<>();
        bPokaz = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        zespol = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        bModyfikujDane = new javax.swing.JButton();
        plec = new javax.swing.JComboBox<>();
        kodSilnika = new javax.swing.JTextField();
        mocWKm = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        pojemnoscWCm3 = new javax.swing.JTextField();
        wiek = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        model = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        marka = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        nazwisko = new javax.swing.JTextField();
        numerRejPojazduL = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        rodzajDoladowania = new javax.swing.JComboBox<>();
        imie = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        numerRejestracyjny = new javax.swing.JTextField();
        bZnajdz = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        najlepszyCzas = new javax.swing.JTextField();
        bModyfikujCzas = new javax.swing.JButton();
        bUsunZawodnika = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaWynikow = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mModyfikujDane = new javax.swing.JMenuItem();
        mModyfikujCzas = new javax.swing.JMenuItem();
        mUsunZawodnika = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Forte", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Witamy w panelu administratora!");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tabela wyników");

        jLabel3.setText("Max. pojemność");

        jLabel4.setText("Doładowanie");

        doladowanie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "N", "T", "K" }));

        bPokaz.setText("Pokaż");
        bPokaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPokazActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Dane zawodników");

        jLabel13.setText("Imie");

        jLabel6.setText("Kod silnika");

        jLabel14.setText("Zespół (opc)");

        bModyfikujDane.setText("Modyfikuj Dane");
        bModyfikujDane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModyfikujDaneActionPerformed(evt);
            }
        });

        plec.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "K", "I" }));

        jLabel7.setText("Moc (w KM)");

        jLabel8.setText("Rodzaj doładowania");

        wiek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wiekActionPerformed(evt);
            }
        });

        jLabel9.setText("Pojemność (w cm3)");

        jLabel10.setText("Model");

        jLabel11.setText("Wiek");

        jLabel12.setText("Płeć");

        jLabel15.setText("Marka");

        numerRejPojazduL.setEditable(false);
        numerRejPojazduL.setEnabled(false);

        jLabel16.setText("Nazwisko");

        jLabel17.setText("Numer Rejestracyjny");

        rodzajDoladowania.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N", "T", "C" }));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Numer rejestracyjny");

        bZnajdz.setText("Znajdź");
        bZnajdz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bZnajdzActionPerformed(evt);
            }
        });

        statusLabel.setBackground(new java.awt.Color(1, 1, 1));
        statusLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(255, 51, 102));
        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText("Aby rozpocząć, wyszukaj zawodnika");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("Najlepszy czas");

        najlepszyCzas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        bModyfikujCzas.setText("Modyfikuj");
        bModyfikujCzas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModyfikujCzasActionPerformed(evt);
            }
        });

        bUsunZawodnika.setBackground(new java.awt.Color(255, 51, 51));
        bUsunZawodnika.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bUsunZawodnika.setText("USUŃ ZAWODNIKA!");
        bUsunZawodnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUsunZawodnikaActionPerformed(evt);
            }
        });

        tabelaWynikow.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Imie", "Nazwisko", "Marka", "Model", "Czas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaWynikow.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabelaWynikow);
        if (tabelaWynikow.getColumnModel().getColumnCount() > 0) {
            tabelaWynikow.getColumnModel().getColumn(0).setResizable(false);
            tabelaWynikow.getColumnModel().getColumn(1).setResizable(false);
            tabelaWynikow.getColumnModel().getColumn(2).setResizable(false);
            tabelaWynikow.getColumnModel().getColumn(3).setResizable(false);
            tabelaWynikow.getColumnModel().getColumn(4).setResizable(false);
            tabelaWynikow.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel19.setText("Id");

        id.setEditable(false);
        id.setEnabled(false);

        jMenu1.setText("File");

        mModyfikujDane.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        mModyfikujDane.setText("Modyfikuj dane");
        mModyfikujDane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mModyfikujDaneActionPerformed(evt);
            }
        });
        jMenu1.add(mModyfikujDane);

        mModyfikujCzas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        mModyfikujCzas.setText("Modyfikuj czas");
        mModyfikujCzas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mModyfikujCzasActionPerformed(evt);
            }
        });
        jMenu1.add(mModyfikujCzas);

        mUsunZawodnika.setText("Usuń zawodnika");
        mUsunZawodnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mUsunZawodnikaActionPerformed(evt);
            }
        });
        jMenu1.add(mUsunZawodnika);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(maxPojemnosc, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(doladowanie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bPokaz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numerRejestracyjny)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bZnajdz, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(kodSilnika, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(mocWKm, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(model, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(marka, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addGap(18, 18, 18)
                                        .addComponent(numerRejPojazduL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel8))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(rodzajDoladowania, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(pojemnoscWCm3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel12))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(zespol, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                                    .addComponent(wiek)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(plec, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addComponent(bModyfikujDane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel19))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                            .addComponent(nazwisko)
                                            .addComponent(imie)))))
                            .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(najlepszyCzas, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bModyfikujCzas, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                            .addComponent(bUsunZawodnika, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(maxPojemnosc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(doladowanie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bPokaz)
                    .addComponent(statusLabel))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(numerRejestracyjny, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bZnajdz, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel17)
                                .addComponent(numerRejPojazduL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel19))
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(marka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(model, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(pojemnoscWCm3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rodzajDoladowania, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(mocWKm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(imie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(nazwisko, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(plec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(wiek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(zespol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(kodSilnika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bModyfikujDane, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(najlepszyCzas, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                            .addComponent(bModyfikujCzas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bUsunZawodnika))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bPokazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPokazActionPerformed
        try {
            //tabelaWynikow
            bMaster.pobierzTabele();
            DefaultTableModel model = (DefaultTableModel) tabelaWynikow.getModel();
            if (model.getRowCount() > 0);
                for (int i=model.getRowCount() - 1; i >= 0; i--)
                    model.removeRow(i);
            if (bMaster.dane != null) {
                for (Tabela wiersz:bMaster.dane){
                    String[] tabelka = {String.valueOf(wiersz.getId()),wiersz.getImie(),wiersz.getNazwisko(),wiersz.getMarka(),wiersz.getModel(),String.valueOf(wiersz.getNajlepszyCzas())};                   
                    if (!maxPojemnosc.getText().isEmpty() && wiersz.getPojemnoscWCm3() < Integer.parseInt(maxPojemnosc.getText()) && wiersz.getRodzajDoladowania().contains(doladowanie.getSelectedItem().toString()))
                        model.addRow(tabelka);
                }
                setStatus("Zaktualizowano listę");
            } 
        } catch (Exception ex) {
            Logger.getLogger(masterPanel.class.getName()).log(Level.SEVERE, null, ex);
            setStatus("Błąd tabeli");
        }
    }//GEN-LAST:event_bPokazActionPerformed

    
    private void mModyfikujCzasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mModyfikujCzasActionPerformed
        this.bModyfikujCzasActionPerformed(evt);
    }//GEN-LAST:event_mModyfikujCzasActionPerformed

    private void bZnajdzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bZnajdzActionPerformed
        try {
            bMaster.pobierzDanePojazdu(numerRejestracyjny.getText().toString());
            bMaster.pobierzDaneZawodnika(numerRejestracyjny.getText().toString());
            bMaster.pobierzCzas(numerRejestracyjny.getText().toString());
            wyswietlDane();
            if (numerRejPojazduL.getText().toString().contains(numerRejestracyjny.getText().toString()) && !numerRejPojazduL.getText().toString().contains(" ") && !numerRejPojazduL.getText().isEmpty()){
                this.setButtonsEnabled(true);
                setStatus("Znaleziono");
            } else {
                setButtonsEnabled(false);
                setStatus("Nie znaleziono");
            }
        } catch (Exception ex) {
            this.setStatus("Błąd wyszukiwania");
        }
    }//GEN-LAST:event_bZnajdzActionPerformed

    private void bModyfikujDaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModyfikujDaneActionPerformed
        if (this.modyfikacjaDanych == false){
            this.modyfikacjaDanych = true;
            this.setDaneZawodnikaEnabled(true);
            this.bModyfikujDane.setText("Zapisz Dane");
            this.mModyfikujDane.setText("Zapisz Dane");
            this.setStatus("Edytowanie danych zawodnika");
            
        } else {
            try {            
                bMaster.modyfikujPojazdIZawodnika(numerRejPojazduL.getText().toString(),marka.getText().toString(),model.getText().toString(),pojemnoscWCm3.getText().toString(),rodzajDoladowania.getSelectedItem().toString(),mocWKm.getText().toString(),kodSilnika.getText().toString(),imie.getText().toString(),nazwisko.getText().toString(),plec.getSelectedItem().toString(),wiek.getText().toString(),zespol.getText().toString());
                this.modyfikacjaDanych = false;
                this.setDaneZawodnikaEnabled(false);
                this.bModyfikujDane.setText("Modyfikuj Dane");
                this.mModyfikujDane.setText("Modyfikuj Dane");
                this.setStatus("Zapisano dane zawodnika");
            } catch (Exception ex) {
                setStatus("Błąd zapisywania danych");
                Logger.getLogger(masterPanel.class.getName()).log(Level.SEVERE, null, ex);
            }                     
        }
    }//GEN-LAST:event_bModyfikujDaneActionPerformed

    private void bModyfikujCzasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModyfikujCzasActionPerformed
        if (this.modyfikacjaCzasu == false){
            this.modyfikacjaCzasu = true;
            this.setNajlepszyCzasEnabled(true);
            this.bModyfikujCzas.setText("Zapisz");
            this.mModyfikujCzas.setText("Zapisz");
            this.setStatus("Edytowanie czasu zawodnika");
        } else {
            try {
                bMaster.modyfikujCzas(numerRejPojazduL.getText(), najlepszyCzas.getText());
            } catch (Exception ex) {
                setStatus("Błąd zmiany czasu");
                Logger.getLogger(masterPanel.class.getName()).log(Level.SEVERE, null, ex);
            } 
            this.modyfikacjaCzasu = false;
            this.setNajlepszyCzasEnabled(false);
            this.bModyfikujCzas.setText("Modyfikuj");
            this.mModyfikujCzas.setText("Modyfikuj");
            this.setStatus("Zapisano czas zawodnika");
        }
    }//GEN-LAST:event_bModyfikujCzasActionPerformed
    
    private void wiekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wiekActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wiekActionPerformed

    private void bUsunZawodnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUsunZawodnikaActionPerformed
        try {
            bMaster.usunDane(numerRejPojazduL.getText());
            setStatus("Usunięto " + numerRejPojazduL.getText());
            clearAllFields();
            setAllEnabled(false);
        } catch (Exception ex) {
            setStatus("Usuwanie nie powiodło się");
            Logger.getLogger(masterPanel.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_bUsunZawodnikaActionPerformed

    private void mModyfikujDaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mModyfikujDaneActionPerformed
        this.bModyfikujDaneActionPerformed(evt);
    }//GEN-LAST:event_mModyfikujDaneActionPerformed

    private void mUsunZawodnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mUsunZawodnikaActionPerformed
        this.bUsunZawodnikaActionPerformed(evt);
    }//GEN-LAST:event_mUsunZawodnikaActionPerformed

    private void wyswietlDane (){
        for (Pojazd pojazd:bMaster.danePojazd){
            numerRejPojazduL.setText(pojazd.getNumerRejPojazdu());
            marka.setText(pojazd.getMarka());
            model.setText(pojazd.getModel());
            pojemnoscWCm3.setText(Integer.toString(pojazd.getPojemnoscWCm3()));
            rodzajDoladowania.setSelectedItem(pojazd.getRodzajDoladowania());
            mocWKm.setText(String.valueOf(pojazd.getMocWKm()));
            kodSilnika.setText(pojazd.getKodSilnika());
        }
        for (Zawodnik zawodnik:bMaster.daneZawodnik){
            id.setText(Integer.toString(zawodnik.getId()));
            imie.setText(zawodnik.getImie());
            nazwisko.setText(zawodnik.getNazwisko());
            plec.setSelectedItem(zawodnik.getPlec());
            wiek.setText(Integer.toString(zawodnik.getWiek()));
            zespol.setText(zawodnik.getZespol());
        }
        for (Czas czas:bMaster.czasZawodnika)
            najlepszyCzas.setText(czas.getNajlepszyCzas().toString());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(masterPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(masterPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(masterPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(masterPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new masterPanel().setVisible(true);
            }
        });
    }
    
    private void clearAllFields (){
        this.numerRejPojazduL.setText("");
        this.marka.setText("");
        this.model.setText("");
        this.pojemnoscWCm3.setText("");
        this.rodzajDoladowania.setSelectedItem("N");
        this.mocWKm.setText("");
        this.kodSilnika.setText("");
        this.imie.setText("");
        this.nazwisko.setText("");
        this.plec.setSelectedItem("M");
        this.wiek.setText("");
        this.zespol.setText("");
        this.najlepszyCzas.setText("");
    }
    
    private void setDaneZawodnikaEnabled(boolean state) {
        this.marka.setEnabled(state);
        this.model.setEnabled(state);
        this.pojemnoscWCm3.setEnabled(state);
        this.rodzajDoladowania.setEnabled(state);
        this.mocWKm.setEnabled(state);
        this.kodSilnika.setEnabled(state);
        this.imie.setEnabled(state);
        this.nazwisko.setEnabled(state);
        this.plec.setEnabled(state);
        this.wiek.setEnabled(state);
        this.zespol.setEnabled(state);
    }
    
    private void setNajlepszyCzasEnabled (boolean state){
        this.najlepszyCzas.setEnabled(state);
    }
    
    private void setButtonsEnabled (boolean state){
        this.bModyfikujCzas.setEnabled(state);
        this.bModyfikujDane.setEnabled(state);
        this.bUsunZawodnika.setEnabled(state);
        this.mModyfikujCzas.setEnabled(state);
        this.mModyfikujDane.setEnabled(state);
        this.mUsunZawodnika.setEnabled(state);
    }
    
    private void setAllEnabled (boolean state){
        this.setDaneZawodnikaEnabled(state);
        this.setNajlepszyCzasEnabled(state);
        this.setButtonsEnabled(state);
    }
    
    private void setStatus (String status){
        this.statusLabel.setText(status);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bModyfikujCzas;
    private javax.swing.JButton bModyfikujDane;
    private javax.swing.JButton bPokaz;
    private javax.swing.JButton bUsunZawodnika;
    private javax.swing.JButton bZnajdz;
    private javax.swing.JComboBox<String> doladowanie;
    private javax.swing.JTextField id;
    private javax.swing.JTextField imie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField kodSilnika;
    private javax.swing.JMenuItem mModyfikujCzas;
    private javax.swing.JMenuItem mModyfikujDane;
    private javax.swing.JMenuItem mUsunZawodnika;
    private javax.swing.JTextField marka;
    private javax.swing.JTextField maxPojemnosc;
    private javax.swing.JTextField mocWKm;
    private javax.swing.JTextField model;
    private javax.swing.JTextField najlepszyCzas;
    private javax.swing.JTextField nazwisko;
    private javax.swing.JTextField numerRejPojazduL;
    private javax.swing.JTextField numerRejestracyjny;
    private javax.swing.JComboBox<String> plec;
    private javax.swing.JTextField pojemnoscWCm3;
    private javax.swing.JComboBox<String> rodzajDoladowania;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTable tabelaWynikow;
    private javax.swing.JTextField wiek;
    private javax.swing.JTextField zespol;
    // End of variables declaration//GEN-END:variables
    
}
